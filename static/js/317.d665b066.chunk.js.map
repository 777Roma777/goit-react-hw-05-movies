{"version":3,"file":"static/js/317.d665b066.chunk.js","mappings":"qLAEaA,E,OAAQC,GAAAA,EAAH,gL,SCALC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC5B,OAAO,UAACH,EAAD,WAAO,+BAA2B,4BAAM,IAAEG,EAAQ,SAC1D,C,wJCHD,EAA+B,8BAA/B,EAA8E,gCAA9E,EAAgI,iC,SCgDhI,EA1CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAiB,mCAAG,sGAEtBN,GAAa,GAFS,UAGIO,EAAAA,EAAAA,IAAaX,GAHjB,gBAGdY,EAHc,EAGdA,QACRJ,EAAgBI,GAJM,gDAMtBN,EAAS,KAAMP,SANO,yBAQtBK,GAAa,GARS,4EAAH,qDAWvBM,GAZoB,CAarB,GAAE,CAACV,KAGF,gCACGG,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,IACTE,EAAaM,OACZN,EAAaO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,eAAaC,UAAWC,EAAxB,UACE,2BACE,eAAGD,UAAWC,EAAd,UAAqC,WAASH,MAC9C,cAAGE,UAAWC,EAAd,SAAuCF,QAHlCF,EADM,KASjB,uBAAG,kDAIV,C,8LC7CDK,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGN,IAAMC,EAAU,mCAAG,sGACDF,EAAAA,EAAAA,IAAU,mDADT,uBAChBG,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qDAKVC,EAAU,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,0DAA6DK,IAD1D,uBACjBF,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKVG,EAAY,mCAAG,WAAO1B,GAAP,yFACLoB,EAAAA,EAAAA,IAAA,6CAAgDpB,IAD3C,uBACnBuB,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAS,mCAAG,WAAO3B,GAAP,yFACFoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,aADE,uBAChBuB,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKTZ,EAAY,mCAAG,WAAOX,GAAP,yFACHoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,aADG,uBAClBuB,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/ErrorMessage/errorMessage.styled.js","components/ErrorMessage/errorMessage.jsx","webpack://react-homework-template/./src/components/Reviews/reviews.module.css?5c8c","components/Reviews/reviews.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.p`\n  margin-top: 100px;\n  text-align: center;\n  color: red;\n  font-size: 26px;\n  font-weight: 500;\n\n  span{\ncolor: #010101;\nfont-size: 20px;\n  }\n`","import { Error } from \"./errorMessage.styled\";\n\nexport const ErrorMessage = ({message}) => {\n  return <Error>Oops! Something does wrong!<span>({message})</span></Error>;\n}","// extracted by mini-css-extract-plugin\nexport default {\"reviews-list\":\"reviews_reviews-list__V-Cv8\",\"reviews-author\":\"reviews_reviews-author__gXW-k\",\"reviews-content\":\"reviews_reviews-content__pMQT6\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchReviews } from 'services/api';\nimport Loader from 'components/Loader/loader';\nimport { ErrorMessage } from 'components/ErrorMessage/errorMessage';\nimport css from './reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchReviews(movieId);\n        setMovieReviews(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage />}\n      {movieReviews.length ? (\n        movieReviews.map(({ id, author, content }) => (\n          <ul key={id} className={css['reviews-list']}>\n            <li>\n              <p className={css['reviews-author']}>Author: {author}</p>\n              <p className={css['reviews-content']}>{content}</p>\n            </li>\n          </ul>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie =(</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.params = {\n    api_key: '0c1e89b9ded609b03f6b23eba7068d6d',\n}\n\nexport const fetchFilms = async () => {\n  const { data } = await axios.get('https://api.themoviedb.org/3/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovie = async(query) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n  return data;\n}\n\nexport const fetchDetails = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`);\n  return data;\n} \n\nexport const fetchCast = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`);\n  return data;\n} \n\nexport const fetchReviews = async (movieId) => {\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`);\n  return data;\n  \n} "],"names":["Error","styled","ErrorMessage","message","movieId","useParams","useState","isLoading","setIsLoading","error","setError","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","fetchReviews","results","length","map","id","author","content","className","css","axios","api_key","fetchFilms","data","fetchMovie","query","fetchDetails","fetchCast"],"sourceRoot":""}