{"version":3,"file":"static/js/741.9f94d0b5.chunk.js","mappings":"wQACA,GAAgB,YAAY,wBAAwB,WAAW,uBAAuB,YAAY,wBAAwB,iBAAiB,8B,SCyD3I,EAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAoBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAc,mCAAG,sGAEnBN,GAAa,GAFM,UAGIO,EAAAA,EAAAA,GAAUX,GAHd,gBAGXY,EAHW,EAGXA,KACRJ,EAAaI,GAJM,gDAMnBN,EAAS,KAAMO,SANI,yBAQnBT,GAAa,GARM,4EAAH,qDAWpBM,GAZoB,CAarB,GAAE,CAACV,KAEF,gCACGG,IAAa,SAAC,IAAD,IACbE,IAAS,SAAC,IAAD,IACTE,GACCA,EAAUO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACZ,eAAeC,UAAWC,EAAAA,aAA1B,UACE,gBAAID,UAAWC,EAAAA,aAAf,WAEE,gBACED,UAAWC,EAAAA,YACXC,IACEH,EAAY,yCAC0BA,GA9BpD,yGAiCYI,IAAI,YAEN,eAAGH,UAAWC,EAAAA,aAAd,UAAgC,SAAOJ,MACvC,eAAGG,UAAWC,EAAAA,kBAAd,UAAqC,cAAYH,SAb3CF,EADE,MAoBrB,C,qECtDYQ,E,OAAQC,GAAAA,EAAH,gL,SCALC,EAAe,SAAC,GAAe,IAAdZ,EAAa,EAAbA,QAC5B,OAAO,UAACU,EAAD,WAAO,+BAA2B,4BAAM,IAAEV,EAAQ,SAC1D,C,8LCFDa,EAAAA,EAAAA,SAAAA,OAAwB,CACpBC,QAAS,oCAGN,IAAMC,EAAU,mCAAG,sGACDF,EAAAA,EAAAA,IAAU,mDADT,uBAChBG,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,qDAKVC,EAAU,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,0DAA6DK,IAD1D,uBACjBF,EADiB,EACjBA,KADiB,kBAEjBA,GAFiB,2CAAH,sDAKVG,EAAY,mCAAG,WAAOhC,GAAP,yFACL0B,EAAAA,EAAAA,IAAA,6CAAgD1B,IAD3C,uBACnB6B,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZlB,EAAS,mCAAG,WAAOX,GAAP,yFACF0B,EAAAA,EAAAA,IAAA,6CAAgD1B,EAAhD,aADE,uBAChB6B,EADgB,EAChBA,KADgB,kBAEhBA,GAFgB,2CAAH,sDAKTI,EAAY,mCAAG,WAAOjC,GAAP,yFACH0B,EAAAA,EAAAA,IAAA,6CAAgD1B,EAAhD,aADG,uBAClB6B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/cast.jsx","components/ErrorMessage/errorMessage.styled.js","components/ErrorMessage/errorMessage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast-list\":\"cast_cast-list__Tp0ZM\",\"cast-img\":\"cast_cast-img__R-tas\",\"cast-name\":\"cast_cast-name__dMLk6\",\"cast-character\":\"cast_cast-character__CXlk5\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchCast } from 'services/api';\nimport Loader from 'components/Loader/loader';\nimport { ErrorMessage } from 'components/ErrorMessage/errorMessage';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movieCast, setMovieCast] = useState([]);\n\n  const defaultImg =\n    'https://img.freepik.com/free-photo/user-profile-icon-front-side-with-white-background_187299-40010.jpg';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchCast(movieId);\n        setMovieCast(cast);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <ErrorMessage />}\n      {movieCast &&\n        movieCast.map(({ id, name, character, profile_path }) => (\n          <ul  key={id}  className={css['cast-list']}>\n            <li className={css['cast-item']}>\n           \n              <img \n                className={css['cast-img']}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : defaultImg\n                }\n                alt=\"poster\"\n              />\n              <p className={css['cast-name']}>Name: {name}</p>\n              <p className={css['cast-character']}>Character: {character}</p>\n            </li>\n          </ul>\n        ))}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from \"styled-components\";\n\nexport const Error = styled.p`\n  margin-top: 100px;\n  text-align: center;\n  color: red;\n  font-size: 26px;\n  font-weight: 500;\n\n  span{\ncolor: #010101;\nfont-size: 20px;\n  }\n`","import { Error } from \"./errorMessage.styled\";\n\nexport const ErrorMessage = ({message}) => {\n  return <Error>Oops! Something does wrong!<span>({message})</span></Error>;\n}","import axios from 'axios';\n\naxios.defaults.params = {\n    api_key: '0c1e89b9ded609b03f6b23eba7068d6d',\n}\n\nexport const fetchFilms = async () => {\n  const { data } = await axios.get('https://api.themoviedb.org/3/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovie = async(query) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}`);\n  return data;\n}\n\nexport const fetchDetails = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`);\n  return data;\n} \n\nexport const fetchCast = async (movieId) => {\n  const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`);\n  return data;\n} \n\nexport const fetchReviews = async (movieId) => {\n  const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`);\n  return data;\n  \n} "],"names":["movieId","useParams","useState","isLoading","setIsLoading","error","setError","movieCast","setMovieCast","useEffect","fetchMovieCast","fetchCast","cast","message","map","id","name","character","profile_path","className","css","src","alt","Error","styled","ErrorMessage","axios","api_key","fetchFilms","data","fetchMovie","query","fetchDetails","fetchReviews"],"sourceRoot":""}