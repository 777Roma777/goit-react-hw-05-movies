{"version":3,"file":"static/js/229.4d1d3a04.chunk.js","mappings":"iOAoEA,UAhEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACf,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KA+BF,IA7BAC,EAAAA,EAAAA,YAAU,WACR,IAGMC,EAAU,CACdC,OAAQ,MACRC,IAAI,sCAAD,OAAwCZ,GAC3Ca,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OARf,yNAYIC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,GAAMT,GAFf,OAERU,EAFQ,OAGdd,EAAgBc,EAASC,MAHX,gDAKdC,QAAQC,MAAR,MALc,yBAQVf,GAAW,GARD,4EAAH,qDAYfU,GACD,GAAE,CAAClB,IAEAO,EACF,OAAO,yBAAK,eAGd,IAAMiB,EAAQ,oBAAGtB,EAASuB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,4BACE,SAAC,KAAD,CAASC,GAAIH,EAAb,UACE,4BAAQ,sBAGV,gBACEI,IAAG,yCAAoCvB,EAAawB,aACpDC,IAAKzB,EAAa0B,SAEpB,wBAAK1B,EAAa0B,SAClB,yBAAG,iBAAe1B,EAAa2B,aAAaC,QAAQ,OACpD,yBAAG,cAAY5B,EAAa6B,aAC5B,2BACE,uBAAG,YACF7B,EAAa8B,OAAOC,KAAI,SAAAC,GAAK,OAC5B,wBAAoBA,EAAMC,MAAjBD,EAAME,GADa,SAMrC,C","sources":["path/movieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useLocation, NavLink } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n    const [movieDetails, setMovieDetails] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const API_KEY =\n      'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwYzFlODliOWRlZDYwOWIwM2Y2YjIzZWJhNzA2OGQ2ZCIsInN1YiI6IjY1MmZlYjkzMzU4ZGE3NWI1YzBkYjA3OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QRGnslGWLfs6wcgCsRSPcC2CJHG3SzU9K7engGH1LDM';\n\n    const options = {\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/movie/${movieId}`,\n      params: { language: 'en-US' },\n      headers: {\n        accept: 'application/json',\n        Authorization: `Bearer ${API_KEY}`,\n      },\n    };\n\n    const fetchData = async () => {\n      try {\n        const response = await axios(options);\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.error(error);\n        }\n        finally {\n            setLoading(false); // Встановлюємо стан завантаження в \"false\" навіть у випадку помилки\n          }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const backLink = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <NavLink to={backLink}>\n        <button>← Go back</button>\n      </NavLink>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n        alt={movieDetails.title}\n      />\n      <h1>{movieDetails.title}</h1>\n      <p>Vote avarage: {movieDetails.vote_average.toFixed(1)}</p>\n      <p>Overiview: {movieDetails.overview}</p>\n      <ul>\n        <p>Genres:</p>\n        {movieDetails.genres.map(genre => (\n          <li key={genre.id}>{genre.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","useState","movieDetails","setMovieDetails","loading","setLoading","useEffect","options","method","url","params","language","headers","accept","Authorization","fetchData","axios","response","data","console","error","backLink","state","from","to","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","id"],"sourceRoot":""}